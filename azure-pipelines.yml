# https://aka.ms/yaml

trigger:
 branches:
   include:
     - release
     - release/*
   exclude:
     - master

variables:
  patch: $[counter('versioncounter', 100)]
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

name: 1.0.1.$(patch)

pool:
  vmImage: 'windows-2019'

jobs:
- job: 
  displayName: Deploy to VS Marketplace
  steps:

  - task: PowerShell@2
    displayName: Update version
    inputs:
      filePath: 'build\update-version.ps1'
      arguments: '$(Build.BuildNumber) $(Build.SourcesDirectory)\src\Amusoft.CodeAnalysis.Analyzers\Amusoft.CodeAnalysis.Analyzers.csproj $(Build.SourcesDirectory)\src\Amusoft.CodeAnalysis.Analyzers.Vsix\source.extension.vsixmanifest'

  - task: NuGetToolInstaller@1
    inputs:
      versionSpec: 5.4.0

  - task: NuGetCommand@2
    inputs:
      command: 'restore'
      restoreSolution: '**/*.sln'
      feedsToUse: 'select'

  - task: VSBuild@1
    inputs:
      solution: '**\*.sln'
      vsVersion: '16.0'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
      maximumCpuCount: true

  - task: VSTest@2
    inputs:
      testSelector: 'testAssemblies'
      testAssemblyVer2: |
        **\*test*.dll
        !**\*TestAdapter.dll
        !**\obj\**
      searchFolder: '$(System.DefaultWorkingDirectory)'

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: |
        README.md
        build/**
        **/*.vsix
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishGitHubRelease@0
    displayName: 'Publish-GitHub'
    inputs:
      applicationName: 'Amusoft.CodeAnalysis.Analyzers'
      gitSourceOption: 'github'
      token: '$($gitAccessToken)'
      repo: 'Amusoft.CodeAnalysis.Analyzers'
      owner: 'taori'
      tagName: 'alpha-$(build.buildNumber)'
      releaseName: 'alpha-$(build.buildNumber)'
      releaseBody: 'automated release from Azure DevOps'
      draft: false
      prerelease: false
      assetsPattern: '$(build.artifactstagingdirectory)\**\*.vsix'

  - task: PublishPipelineArtifact@1
    displayName: 'Publish-Vsix-Marketplace'
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifact: 'drop'
      publishLocation: 'pipeline'
