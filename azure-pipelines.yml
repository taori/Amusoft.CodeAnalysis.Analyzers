# https://aka.ms/yaml

trigger:
  branches:
    include:
      - master
      - features/*
      - releases/*
  paths:
    exclude:
     - README.md
     - azure-pipelines.yml
pr:
  autoCancel: true
  branches:
    include:
      - master
      - releases/*

variables:
  patch: $[counter('versioncounter', 100)]
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

pool:
  vmImage: 'windows-2019'
  
jobs:
- job: Build
  displayName: change project and build
  condition: succeeded()
  steps:

  - task: PowerShell@2
    displayName: Update version
    inputs:
      filePath: 'build\update-version-append.ps1'
      arguments: '$(patch) $(Build.SourcesDirectory)\src\Amusoft.CodeAnalysis.Analyzers\Amusoft.CodeAnalysis.Analyzers.csproj $(Build.SourcesDirectory)\src\Amusoft.CodeAnalysis.Analyzers.Vsix\source.extension.vsixmanifest'

  - task: NuGetToolInstaller@1
    inputs:
      versionSpec: 5.4.0

  - task: NuGetCommand@2
    inputs:
      command: 'restore'
      restoreSolution: '**/*.sln'
      feedsToUse: 'config'

  - task: VSBuild@1
    inputs:
      solution: '**\*.sln'
      vsVersion: '16.0'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
      maximumCpuCount: true

  - task: DotNetCoreCLI@2
    displayName: dotnet test *.csproj
    inputs:
      command: 'test'
      projects: '**/*test*/*.csproj'
      publishTestResults: true

  - task: CopyFiles@2
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/releases/'))
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: |
        README.md
        build/**
        **/*.vsix
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishPipelineArtifact@0
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/releases/'))
    inputs:
      artifactName: 'drop'
      targetPath: '$(Build.ArtifactStagingDirectory)'

  - task: PublishGitHubRelease@0
    displayName: 'Publish-GitHub-Alpha'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))  
    inputs:
      applicationName: 'Amusoft.CodeAnalysis.Analyzers'
      gitSourceOption: 'github'
      token: '$($gitAccessToken)'
      repo: 'Amusoft.CodeAnalysis.Analyzers'
      owner: 'taori'
      tagName: 'alpha-$(PackageVersion)'
      releaseName: 'alpha-$(PackageVersion)'
      releaseBody: 'automated release from Azure DevOps'
      draft: false
      prerelease: true
      assetsPattern: '$(build.artifactstagingdirectory)\**\*.vsix'

  - task: PublishGitHubRelease@0
    displayName: 'Publish-GitHub-Release'
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/releases/')) 
    inputs:
      applicationName: 'Amusoft.CodeAnalysis.Analyzers'
      gitSourceOption: 'github'
      token: '$($gitAccessToken)'
      repo: 'Amusoft.CodeAnalysis.Analyzers'
      owner: 'taori'
      tagName: 'release-$(PackageVersion)'
      releaseName: 'release-$(PackageVersion)'
      releaseBody: 'automated release from Azure DevOps'
      draft: false
      prerelease: false
      assetsPattern: '$(build.artifactstagingdirectory)\**\*.vsix'

  - task: PublishPipelineArtifact@1
    displayName: 'Publish-Vsix-Marketplace'
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/releases/'))
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifact: 'drop'
      publishLocation: 'pipeline'
